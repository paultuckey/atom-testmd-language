'name': 'Test Markdown'
'scopeName': 'source.testmd'
'fileTypes': [
    'testmd'
]
'limitLineLength': true

# types are here

'patterns': [
  {
    # variables
    'match': '(\\$[a-zA-Z_\\.]+)'
    'captures':
      '1':
        'name': 'storage.type.var.testmd'
  }
  {
    # title
    'match': '^(title)\\s+(.*)$'
    'captures':
      '1':
        'name': 'keyword.control.tag.testmd'
      '2':
        'name': 'entity.name.type.testmd'
  }
  {
    # name this_is_my_name
    'match': '^\\s*(name)\\s+([a-zA-Z_]+)$'
    'captures':
      '1':
        'name': 'keyword.control.tag.testmd'
      '2':
        'name': 'entity.name.section.testmd'
  }
  {
    # note Some note
    'match': '^\\s*(note)\\s+(.*)$'
    'captures':
      '1':
        'name': 'keyword.control.tag.testmd'
      '2':
        'name': 'comment.line.tag.testmd'
  }
  {
    # open https://example.com/
    'match': '\\s(open)\\s+(.*)$'
    'captures':
      '1':
        'name': 'keyword.control.tag.testmd'
      '2':
        'name': 'string.quoted.double.tag.testmd'
  }
  {
    'match': '^\\s*(type)\\s+(.*)$'
    'captures':
      '1':
        'name': 'keyword.control.tag.testmd'
      '2':
        'name': 'string.quoted.double.tag.testmd'
  }
  {
    'match': '^\\s*(find|click)\\s+(field|button|image|video)\\s+(.*)$'
    'captures':
      '1':
        'name': 'keyword.control.tag.testmd'
      '2':
        'name': 'support.constant.tag.testmd'
      '3':
        'name': 'string.quoted.double.tag.testmd'
  }
  {
    # set
    'match': '^\\s*(set)\\s+[\\w]+\\s+(.*)$'
    'captures':
      '1':
        'name': 'keyword.control.tag.testmd'
      '2':
        'name': 'string.quoted.double.tag.testmd'
  }
  {
    # run
    'match': '\\s(run)\\s+(.*)$'
    'captures':
      '1':
        'name': 'keyword.control.tag.testmd'
      '2':
        'name': 'string.quoted.double.tag.testmd'
  }



]
